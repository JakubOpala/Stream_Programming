[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\opala\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\opala\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 534.229199ms
[debug]       Load.loadUnit: defsScala took 1.6558ms
[debug] [Loading] Scanning directory C:\Users\opala\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\opala\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 103.141999 ms
[debug]           Load.resolveProject(global-plugins) took 346.9351ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\opala\.sbt\1.0\plugins, plugins: List(<none>))) took 585.206901ms
[debug] [Loading] Done in C:\Users\opala\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 761.2178ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.5366ms
[debug]     Load.loadUnit(file:/C:/Users/opala/.sbt/1.0/plugins/, ...) took 1347.4872ms
[debug]   Load.apply: load took 2289.582899ms
[debug]   Load.apply: resolveProjects took 65.088401ms
[debug]   Load.apply: finalTransforms took 324.0408ms
[debug]   Load.apply: config.delegates took 33.7337ms
[debug]   Load.apply: Def.make(settings)... took 2385.012ms
[debug]   Load.apply: structureIndex took 524.4432ms
[debug]   Load.apply: mkStreams took 7.455601ms
[info] loading global plugins from C:\Users\opala\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 15439.014ms
[debug]           Load.loadUnit: plugins took 87.9696ms
[debug]           Load.loadUnit: defsScala took 0.017599ms
[debug] [Loading] Scanning directory C:\Users\opala\IdeaProjects\Assignment10\project
[debug]             Load.loadUnit: mkEval took 24.4695ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\opala\IdeaProjects\Assignment10\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.624801 ms
[info] loading settings for project assignment10-build from idea.sbt ...
[debug]               Load.resolveProject(assignment10-build) took 11.5011ms
[debug]             Load.loadTransitive: finalizeProject(Project(id assignment10-build, base: C:\Users\opala\IdeaProjects\Assignment10\project, plugins: List(<none>))) took 24.323801ms
[debug] [Loading] Done in C:\Users\opala\IdeaProjects\Assignment10\project, returning: (assignment10-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 701.411ms
[debug]           Load.loadUnit: cleanEvalClasses took 26.692801ms
[debug]         Load.loadUnit(file:/C:/Users/opala/IdeaProjects/Assignment10/project/, ...) took 820.7953ms
[debug]       Load.apply: load took 828.7805ms
[debug]       Load.apply: resolveProjects took 0.721701ms
[debug]       Load.apply: finalTransforms took 67.041199ms
[debug]       Load.apply: config.delegates took 2.7998ms
[debug]       Load.apply: Def.make(settings)... took 684.9653ms
[debug]       Load.apply: structureIndex took 183.380199ms
[debug]       Load.apply: mkStreams took 0.0072ms
[info] loading project definition from C:\Users\opala\IdeaProjects\Assignment10\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5554.621101ms
[debug]     Load.loadUnit: defsScala took 0.0189ms
[debug] [Loading] Scanning directory C:\Users\opala\IdeaProjects\Assignment10
[debug]       Load.loadUnit: mkEval took 1.623ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 13.068901 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 81.2235ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\opala\IdeaProjects\Assignment10, plugins: List(<none>))) took 100.150499ms
[debug] [Loading] Done in C:\Users\opala\IdeaProjects\Assignment10, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 484.213401ms
[debug]     Load.loadUnit: cleanEvalClasses took 51.849ms
[debug]   Load.loadUnit(file:/C:/Users/opala/IdeaProjects/Assignment10/, ...) took 6095.243799ms
[debug] Load.apply: load took 6106.091601ms
[debug] Load.apply: resolveProjects took 0.6429ms
[debug] Load.apply: finalTransforms took 108.5679ms
[debug] Load.apply: config.delegates took 1.301ms
[debug] Load.apply: Def.make(settings)... took 478.9015ms
[debug] Load.apply: structureIndex took 165.7106ms
[debug] Load.apply: mkStreams took 0.0066ms
[info] set current project to Assignment10 (in build file:/C:/Users/opala/IdeaProjects/Assignment10/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53079 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53079, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Assignment10 (in build file:/C:/Users/opala/IdeaProjects/Assignment10/)
[debug] > Exec(idea-shell, None, None)
